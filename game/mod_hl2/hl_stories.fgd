@include "base.fgd"
@include "halflife2.fgd"

@PointClass base(Targetname) = logic_playmovie : "Plays a movie"
[
	MovieFilename(string) : "Movie Path" : "" : "Filename of the movie to play"
	allowskip(choices) : "Allow User to Skip" : 0 : "Whether or not the user may skip the video with common keys" =
	[
		0 : "False"
		1 : "True"
	]
	loopvideo(choices) : "Loop Video" : 0 : "If set to true, the movie will loop forever" =
	[
		0 : "False"
		1 : "True"
	]
	fadeintime(float) : "Fade In Time" : 0 : "Time it takes for the video to fade in"
	
	input PlayMovie(void) : "Play the movie."
	input PlayLevelTransitionMovie(string) : "Plays a movie with specific settings used for level transitions.  Pass the name of the movie in the parameters.  To be fired at the end of a level."
	input FadeAllMovies(void) : "Fade movies out for all players connected."

	// Outputs
	output OnPlaybackFinished(void) : "Fired when the movie has completed playing back or was skipped by the user."
]

@PointClass base(Targetname) = env_screeneffect :
	"Allows screenspace effects to be played on the player's view."
[
	type(choices) : "Effect Type" : 0 : "Which effect to use." =
	[
		0 : "Intro Blur"
		1 : "Groggy Vision"
	]
	
	fade(choices) : "Fadeout on stop" : 0 : "If set to true, the effect will fadeout when stopped" =
	[
		0 : "False"
		1 : "True"
	]
	
	duration(float) : "Duration" : 0 : "Duration of the effect"
	
	// Inputs
	input	StartEffect(void) : "Start the effect."
	input   StopEffect(void) : "Stop the effect."
]

@PointClass base(Targetname) = env_resize_ply : 
	"Set the player height"
[
	height(float) : "Player Height" : "64.0" : "Time in seconds to blend between time scales."
	input ApplyResize(void) : "Apply the resize"
]

@PointClass base(Targetname,Angles,Parentname) studioprop("models/editor/camera.mdl") = point_viewcontrol : 
	"A camera entity that controls the player's view. While it's active, the player will see out of the camera." 
[
	target(target_destination) : "Entity to Look At" : : "Name of the entity that the camera should point at and track while active."
	targetattachment(string) : "Target Attachment Name" : : "If set, the camera will focus on the specified attachment on the 'Entity to Look At'."
	wait(integer) : "Hold Time" : 10 : "The amount of time the camera should control the player's view for, after which it deactivates itself. If the camera should stay active until told to deactive, set the 'Infinite Hold Time' spawnflag."
	moveto(target_destination) : "Path Corner" : : "The first path corner in a track that the camera should move along once it's activated. If not specified, the camera won't move."
	interpolatepositiontoplayer(choices) : "Interpolate Position To Player" : 0 : "Gradually interpolate player's position to here on start. (Episodic only)" =
	[
		0 : "No"
		1 : "Yes"
	]
	spawnflags(flags) =
	[
		1: "Start At Player" : 1
		2: "Follow Player" : 1
		4: "Freeze Player" : 0
		8: "Infinite Hold Time" : 0
		16:"Snap to goal angles" : 0
		32:"Make Player non-solid" : 0
		64:"Interruptable by Player" : 0
		128:"Teleport Player to Camera" : 0
	]
	speed(string) : "Initial Speed" : "0" : "The starting speed that the camera moves at, if it's on a path track."
	acceleration(string) : "Acceleration units/sec^2" : "500" : "The speed at which the camera accelerates to path corner's desired speeds."
	deceleration(string) : "Stop Deceleration units/sec^2" : "500" : "The speed at which the camera decelerates to path corner's desired speeds."

	// Inputs
	input Enable(void) : "Enable the point_viewcontrol, and start controlling the player's view."
	input Disable(void) : "Disable the point_viewcontrol, and stop controlling the player's view."

	// Outputs
	output OnEndFollow(void) : "Fired when the point_viewcontrol deactivates, due to the Disable input being received, the Entity to Look At being destroyed, or the Hold Time expiring."
]